C51 COMPILER V9.60.7.0   TIMER                                                             06/20/2023 11:35:44 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Objects\Timer.obj
COMPILER INVOKED BY: C:\Users\Xinlly\ProgramFiles\Normal\Keil_v5\C51\BIN\C51.EXE code\source\Timer.c OPTIMIZE(8,SPEED) B
                    -ROWSE INCDIR(.\code;.\code\header;.\code\source) DEBUG OBJECTEXTEND PRINT(.\Listings\Timer.lst) OBJECT(.\Objects\Timer.o
                    -bj)

line level    source

   1          #include "REG52.H"
   2          #include "CustomType.h"
   3          #include "Led.h"
   4          uint32 currentSysTime_us = 0;
   5          uint32 currentSysPeriod = 0;
   6          uint32 taskPlan_timeMarkMs;
   7          bit flag_inter = 0;
   8          void interruptTimer0() interrupt 1
   9          {
  10   1              TL0 = 0x33;
  11   1              TH0 = 0xFE;
  12   1              currentSysPeriod += 1;
  13   1              currentSysTime_us += 500;
  14   1              ledDisplayTask();
  15   1      }
  16          void initTimer0() // 500us@11.0592MHz
  17          {
  18   1              TMOD |= 0x01; // 设置定时器模式
  19   1              TL0 = 0x33;       // 设置定时初始值
  20   1              TH0 = 0xFE;       // 设置定时重载值
  21   1              TF0 = 0;          // 清除TF0标志
  22   1              EA = 1;
  23   1              ET0 = 1;
  24   1              TR0 = 1; // 定时器0开始计时
  25   1      }
  26          void initTimer1() // 500us@11.0592MHz
  27          {
  28   1              TMOD |= 0x60; 
  29   1              TL1 = 0x00;       
  30   1              TH1 = 0x00;       
  31   1              TF1 = 0;          
  32   1      }
  33          uint32 getSysPeriod()
  34          {
  35   1              return currentSysPeriod;
  36   1      }
  37          uint32 getSysTimeUs()
  38          {
  39   1              return currentSysTime_us;
  40   1      }
  41          uint32 getSysTimeMs()
  42          {
  43   1              return currentSysTime_us / 1000;
  44   1      }
  45          uint32 getSysTimeS()
  46          {
  47   1              return currentSysTime_us / 1000000;
  48   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    192    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.60.7.0   TIMER                                                             06/20/2023 11:35:44 PAGE 2   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
